/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ChallengeManager,
  ChallengeManagerInterface,
} from "../ChallengeManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_values",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "_numSteps",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_lastMover",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_splitFactor",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "currentStatus",
    outputs: [
      {
        internalType: "enum ChallengeStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "fraudDetected",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "witness",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "nodes",
            type: "bytes32[]",
          },
        ],
        internalType: "struct WitnessProof",
        name: "_consensusProof",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "_hashes",
        type: "bytes32[]",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "witness",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "nodes",
            type: "bytes32[]",
          },
        ],
        internalType: "struct WitnessProof",
        name: "_disputedProof",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "_mover",
        type: "string",
      },
    ],
    name: "split",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200244a3803806200244a8339818101604052810190620000379190620005b0565b73__$e8bf4b85905b57662526b2fbe44c6720fc$__639898dc10856040518263ffffffff1660e01b81526004016200007091906200072e565b60206040518083038186803b1580156200008957600080fd5b505af41580156200009e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c4919062000752565b6000819055506001811162000110576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000107906200080b565b60405180910390fd5b600183101562000157576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200014e90620008a3565b60405180910390fd5b600181620001669190620008f4565b845114620001ab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001a290620009a1565b60405180910390fd5b826002819055508160049080519060200190620001ca92919062000212565b508060018190555060006003819055506000600560006101000a81548160ff02191690836002811115620002035762000202620009c3565b5b02179055505050505062000a57565b828054620002209062000a21565b90600052602060002090601f01602090048101928262000244576000855562000290565b82601f106200025f57805160ff191683800117855562000290565b8280016001018555821562000290579182015b828111156200028f57825182559160200191906001019062000272565b5b5090506200029f9190620002a3565b5090565b5b80821115620002be576000816000905550600101620002a4565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200032682620002db565b810181811067ffffffffffffffff82111715620003485762000347620002ec565b5b80604052505050565b60006200035d620002c2565b90506200036b82826200031b565b919050565b600067ffffffffffffffff8211156200038e576200038d620002ec565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b620003b981620003a4565b8114620003c557600080fd5b50565b600081519050620003d981620003ae565b92915050565b6000620003f6620003f08462000370565b62000351565b905080838252602082019050602084028301858111156200041c576200041b6200039f565b5b835b81811015620004495780620004348882620003c8565b8452602084019350506020810190506200041e565b5050509392505050565b600082601f8301126200046b576200046a620002d6565b5b81516200047d848260208601620003df565b91505092915050565b6000819050919050565b6200049b8162000486565b8114620004a757600080fd5b50565b600081519050620004bb8162000490565b92915050565b600080fd5b600067ffffffffffffffff821115620004e457620004e3620002ec565b5b620004ef82620002db565b9050602081019050919050565b60005b838110156200051c578082015181840152602081019050620004ff565b838111156200052c576000848401525b50505050565b6000620005496200054384620004c6565b62000351565b905082815260208101848484011115620005685762000567620004c1565b5b62000575848285620004fc565b509392505050565b600082601f830112620005955762000594620002d6565b5b8151620005a784826020860162000532565b91505092915050565b60008060008060808587031215620005cd57620005cc620002cc565b5b600085015167ffffffffffffffff811115620005ee57620005ed620002d1565b5b620005fc8782880162000453565b94505060206200060f87828801620004aa565b935050604085015167ffffffffffffffff811115620006335762000632620002d1565b5b62000641878288016200057d565b92505060606200065487828801620004aa565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6200069781620003a4565b82525050565b6000620006ab83836200068c565b60208301905092915050565b6000602082019050919050565b6000620006d18262000660565b620006dd81856200066b565b9350620006ea836200067c565b8060005b83811015620007215781516200070588826200069d565b97506200071283620006b7565b925050600181019050620006ee565b5085935050505092915050565b600060208201905081810360008301526200074a8184620006c4565b905092915050565b6000602082840312156200076b576200076a620002cc565b5b60006200077b84828501620003c8565b91505092915050565b600082825260208201905092915050565b7f5468652073706c697474696e6720666163746f72206d7573742062652061626f60008201527f7665203100000000000000000000000000000000000000000000000000000000602082015250565b6000620007f360248362000784565b9150620008008262000795565b604082019050919050565b600060208201905081810360008301526200082681620007e4565b9050919050565b7f5468657265206d757374206265206174206c65617374206f6e6520656c656d6560008201527f6e74000000000000000000000000000000000000000000000000000000000000602082015250565b60006200088b60228362000784565b915062000898826200082d565b604082019050919050565b60006020820190508181036000830152620008be816200087c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620009018262000486565b91506200090e8362000486565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620009465762000945620008c5565b5b828201905092915050565b7f5468657265206d757374206265206b2b312076616c7565730000000000000000600082015250565b60006200098960188362000784565b9150620009968262000951565b602082019050919050565b60006020820190508181036000830152620009bc816200097a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000a3a57607f821691505b6020821081141562000a515762000a50620009f2565b5b50919050565b6119e38062000a676000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806311bd9a3d146100465780631e5520ac14610062578063ef8a92351461007e575b600080fd5b610060600480360381019061005b9190610c12565b61009c565b005b61007c60048036038101906100779190610d1e565b610254565b005b610086610836565b6040516100939190610e74565b60405180910390f35b600073__$e8bf4b85905b57662526b2fbe44c6720fc$__6365b428cc6001846100c59190610ebe565b6003546002546001546040518563ffffffff1660e01b81526004016100ed9493929190610f23565b60206040518083038186803b15801561010557600080fd5b505af4158015610119573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013d9190610f7d565b9050600073__$e8bf4b85905b57662526b2fbe44c6720fc$__6365b428cc846003546002546001546040518563ffffffff1660e01b81526004016101849493929190610f23565b60206040518083038186803b15801561019c57600080fd5b505af41580156101b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d49190610f7d565b9050816001826101e49190610ebe565b14610224576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021b90611007565b60405180910390fd5b6001600560006101000a81548160ff0219169083600281111561024a57610249610dfd565b5b0217905550505050565b73__$e8bf4b85905b57662526b2fbe44c6720fc$__6363b4e3566003546002546001546040518463ffffffff1660e01b815260040161029593929190611027565b60206040518083038186803b1580156102ad57600080fd5b505af41580156102c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e59190611096565b610324576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031b9061110f565b60405180910390fd5b610340866103319061133e565b8461033b9061133e565b610849565b826000013585856001888890506103579190611351565b81811061036757610366611385565b5b9050602002013514156103af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a690611426565b60405180910390fd5b600073__$e8bf4b85905b57662526b2fbe44c6720fc$__6365b428cc88602001356003546002546001546040518563ffffffff1660e01b81526004016103f89493929190610f23565b60206040518083038186803b15801561041057600080fd5b505af4158015610424573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104489190610f7d565b9050600073__$e8bf4b85905b57662526b2fbe44c6720fc$__6365b428cc86602001356003546002546001546040518563ffffffff1660e01b81526004016104939493929190610f23565b60206040518083038186803b1580156104ab57600080fd5b505af41580156104bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e39190610f7d565b9050600180546104f39190611351565b8860200135146105a35773__$e8bf4b85905b57662526b2fbe44c6720fc$__6365b428cc60018a602001356105289190610ebe565b6003546002546001546040518563ffffffff1660e01b81526004016105509493929190610f23565b60206040518083038186803b15801561056857600080fd5b505af415801561057c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a09190610f7d565b90505b6000600173__$e8bf4b85905b57662526b2fbe44c6720fc$__6372f57d8e85856001546040518463ffffffff1660e01b81526004016105e493929190611027565b60206040518083038186803b1580156105fc57600080fd5b505af4158015610610573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106349190610f7d565b61063e9190611351565b9050808888905014610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90611492565b60405180910390fd5b826003819055508160028190555060006001898990506106a59190610ebe565b67ffffffffffffffff8111156106be576106bd611145565b5b6040519080825280602002602001820160405280156106ec5781602001602082028036833780820191505090505b50905089600001358160008151811061070857610707611385565b5b6020026020010181815250506000600190505b60018a8a905061072b9190610ebe565b81101561078a5789896001836107419190611351565b81811061075157610750611385565b5b9050602002013582828151811061076b5761076a611385565b5b6020026020010181815250508080610782906114b2565b91505061071b565b5073__$e8bf4b85905b57662526b2fbe44c6720fc$__639898dc10826040518263ffffffff1660e01b81526004016107c291906115b9565b60206040518083038186803b1580156107da57600080fd5b505af41580156107ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081291906115f0565b600081905550858560049190610829929190610b25565b5050505050505050505050565b600560009054906101000a900460ff1681565b600173__$e8bf4b85905b57662526b2fbe44c6720fc$__6372f57d8e6003546002546001546040518463ffffffff1660e01b815260040161088c93929190611027565b60206040518083038186803b1580156108a457600080fd5b505af41580156108b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108dc9190610f7d565b6108e69190611351565b82602001511061092b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109229061168f565b60405180910390fd5b600073__$e8bf4b85905b57662526b2fbe44c6720fc$__630ad68210846000546040518363ffffffff1660e01b815260040161096892919061178c565b60206040518083038186803b15801561098057600080fd5b505af4158015610994573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b89190611096565b9050806109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f190611808565b60405180910390fd5b600073__$e8bf4b85905b57662526b2fbe44c6720fc$";

export class ChallengeManager__factory extends ContractFactory {
  constructor(
    linkLibraryAddresses: ChallengeManagerLibraryAddresses,
    signer?: Signer
  ) {
    super(
      _abi,
      ChallengeManager__factory.linkBytecode(linkLibraryAddresses),
      signer
    );
  }

  static linkBytecode(
    linkLibraryAddresses: ChallengeManagerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e8bf4b85905b57662526b2fbe44c6720fc\\$__", "g"),
      linkLibraryAddresses["contracts/merkle-utils.sol:MerkleUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _values: BytesLike[],
    _numSteps: BigNumberish,
    _lastMover: string,
    _splitFactor: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ChallengeManager> {
    return super.deploy(
      _values,
      _numSteps,
      _lastMover,
      _splitFactor,
      overrides || {}
    ) as Promise<ChallengeManager>;
  }
  getDeployTransaction(
    _values: BytesLike[],
    _numSteps: BigNumberish,
    _lastMover: string,
    _splitFactor: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _values,
      _numSteps,
      _lastMover,
      _splitFactor,
      overrides || {}
    );
  }
  attach(address: string): ChallengeManager {
    return super.attach(address) as ChallengeManager;
  }
  connect(signer: Signer): ChallengeManager__factory {
    return super.connect(signer) as ChallengeManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChallengeManagerInterface {
    return new utils.Interface(_abi) as ChallengeManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChallengeManager {
    return new Contract(address, _abi, signerOrProvider) as ChallengeManager;
  }
}

export interface ChallengeManagerLibraryAddresses {
  ["contracts/merkle-utils.sol:MerkleUtils"]: string;
}
