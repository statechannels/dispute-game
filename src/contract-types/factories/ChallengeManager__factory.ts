/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ChallengeManager,
  ChallengeManagerInterface,
} from "../ChallengeManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_values",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "_numSteps",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_lastMover",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_splitFactor",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "witness",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "nodes",
            type: "bytes32[]",
          },
        ],
        internalType: "struct WitnessProof",
        name: "_consensusProof",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "_hashes",
        type: "bytes32[]",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "witness",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "nodes",
            type: "bytes32[]",
          },
        ],
        internalType: "struct WitnessProof",
        name: "_disputedProof",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "_mover",
        type: "string",
      },
    ],
    name: "split",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002104380380620021048339818101604052810190620000379190620005b0565b73__$e8bf4b85905b57662526b2fbe44c6720fc$__639898dc10856040518263ffffffff1660e01b81526004016200007091906200072e565b60206040518083038186803b1580156200008957600080fd5b505af41580156200009e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c4919062000752565b6000819055506001811162000110576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000107906200080b565b60405180910390fd5b600183101562000157576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200014e90620008a3565b60405180910390fd5b600181620001669190620008f4565b845114620001ab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001a290620009a1565b60405180910390fd5b826002819055508160049080519060200190620001ca92919062000212565b508060018190555060006003819055506000600560006101000a81548160ff02191690836002811115620002035762000202620009c3565b5b02179055505050505062000a57565b828054620002209062000a21565b90600052602060002090601f01602090048101928262000244576000855562000290565b82601f106200025f57805160ff191683800117855562000290565b8280016001018555821562000290579182015b828111156200028f57825182559160200191906001019062000272565b5b5090506200029f9190620002a3565b5090565b5b80821115620002be576000816000905550600101620002a4565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200032682620002db565b810181811067ffffffffffffffff82111715620003485762000347620002ec565b5b80604052505050565b60006200035d620002c2565b90506200036b82826200031b565b919050565b600067ffffffffffffffff8211156200038e576200038d620002ec565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b620003b981620003a4565b8114620003c557600080fd5b50565b600081519050620003d981620003ae565b92915050565b6000620003f6620003f08462000370565b62000351565b905080838252602082019050602084028301858111156200041c576200041b6200039f565b5b835b81811015620004495780620004348882620003c8565b8452602084019350506020810190506200041e565b5050509392505050565b600082601f8301126200046b576200046a620002d6565b5b81516200047d848260208601620003df565b91505092915050565b6000819050919050565b6200049b8162000486565b8114620004a757600080fd5b50565b600081519050620004bb8162000490565b92915050565b600080fd5b600067ffffffffffffffff821115620004e457620004e3620002ec565b5b620004ef82620002db565b9050602081019050919050565b60005b838110156200051c578082015181840152602081019050620004ff565b838111156200052c576000848401525b50505050565b6000620005496200054384620004c6565b62000351565b905082815260208101848484011115620005685762000567620004c1565b5b62000575848285620004fc565b509392505050565b600082601f830112620005955762000594620002d6565b5b8151620005a784826020860162000532565b91505092915050565b60008060008060808587031215620005cd57620005cc620002cc565b5b600085015167ffffffffffffffff811115620005ee57620005ed620002d1565b5b620005fc8782880162000453565b94505060206200060f87828801620004aa565b935050604085015167ffffffffffffffff811115620006335762000632620002d1565b5b62000641878288016200057d565b92505060606200065487828801620004aa565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6200069781620003a4565b82525050565b6000620006ab83836200068c565b60208301905092915050565b6000602082019050919050565b6000620006d18262000660565b620006dd81856200066b565b9350620006ea836200067c565b8060005b83811015620007215781516200070588826200069d565b97506200071283620006b7565b925050600181019050620006ee565b5085935050505092915050565b600060208201905081810360008301526200074a8184620006c4565b905092915050565b6000602082840312156200076b576200076a620002cc565b5b60006200077b84828501620003c8565b91505092915050565b600082825260208201905092915050565b7f5468652073706c697474696e6720666163746f72206d7573742062652061626f60008201527f7665203100000000000000000000000000000000000000000000000000000000602082015250565b6000620007f360248362000784565b9150620008008262000795565b604082019050919050565b600060208201905081810360008301526200082681620007e4565b9050919050565b7f5468657265206d757374206265206174206c65617374206f6e6520656c656d6560008201527f6e74000000000000000000000000000000000000000000000000000000000000602082015250565b60006200088b60228362000784565b915062000898826200082d565b604082019050919050565b60006020820190508181036000830152620008be816200087c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620009018262000486565b91506200090e8362000486565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620009465762000945620008c5565b5b828201905092915050565b7f5468657265206d757374206265206b2b312076616c7565730000000000000000600082015250565b60006200098960188362000784565b9150620009968262000951565b602082019050919050565b60006020820190508181036000830152620009bc816200097a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000a3a57607f821691505b6020821081141562000a515762000a50620009f2565b5b50919050565b61169d8062000a676000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631e5520ac14610030575b600080fd5b61004a60048036038101906100459190610aa0565b61004c565b005b73__$e8bf4b85905b57662526b2fbe44c6720fc$__6363b4e3566003546002546001546040518463ffffffff1660e01b815260040161008d93929190610b98565b60206040518083038186803b1580156100a557600080fd5b505af41580156100b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100dd9190610c07565b61011c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011390610c91565b60405180910390fd5b6101388661012990610eec565b8461013390610eec565b61062e565b8260000135858560018888905061014f9190610f2e565b81811061015f5761015e610f62565b5b9050602002013514156101a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019e90611003565b60405180910390fd5b600073__$e8bf4b85905b57662526b2fbe44c6720fc$__6365b428cc88602001356003546002546001546040518563ffffffff1660e01b81526004016101f09493929190611023565b60206040518083038186803b15801561020857600080fd5b505af415801561021c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610240919061107d565b9050600073__$e8bf4b85905b57662526b2fbe44c6720fc$__6365b428cc86602001356003546002546001546040518563ffffffff1660e01b815260040161028b9493929190611023565b60206040518083038186803b1580156102a357600080fd5b505af41580156102b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102db919061107d565b9050600180546102eb9190610f2e565b88602001351461039b5773__$e8bf4b85905b57662526b2fbe44c6720fc$__6365b428cc60018a6020013561032091906110aa565b6003546002546001546040518563ffffffff1660e01b81526004016103489493929190611023565b60206040518083038186803b15801561036057600080fd5b505af4158015610374573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610398919061107d565b90505b6000600173__$e8bf4b85905b57662526b2fbe44c6720fc$__6372f57d8e85856001546040518463ffffffff1660e01b81526004016103dc93929190610b98565b60206040518083038186803b1580156103f457600080fd5b505af4158015610408573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042c919061107d565b6104369190610f2e565b905080888890501461047d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104749061114c565b60405180910390fd5b8260038190555081600281905550600060018989905061049d91906110aa565b67ffffffffffffffff8111156104b6576104b5610cc7565b5b6040519080825280602002602001820160405280156104e45781602001602082028036833780820191505090505b509050896000013581600081518110610500576104ff610f62565b5b6020026020010181815250506000600190505b60018a8a905061052391906110aa565b8110156105825789896001836105399190610f2e565b81811061054957610548610f62565b5b9050602002013582828151811061056357610562610f62565b5b602002602001018181525050808061057a9061116c565b915050610513565b5073__$e8bf4b85905b57662526b2fbe44c6720fc$__639898dc10826040518263ffffffff1660e01b81526004016105ba9190611273565b60206040518083038186803b1580156105d257600080fd5b505af41580156105e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060a91906112aa565b60008190555085856004919061062192919061090a565b5050505050505050505050565b600173__$e8bf4b85905b57662526b2fbe44c6720fc$__6372f57d8e6003546002546001546040518463ffffffff1660e01b815260040161067193929190610b98565b60206040518083038186803b15801561068957600080fd5b505af415801561069d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c1919061107d565b6106cb9190610f2e565b826020015110610710576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070790611349565b60405180910390fd5b600073__$e8bf4b85905b57662526b2fbe44c6720fc$__630ad68210846000546040518363ffffffff1660e01b815260040161074d929190611446565b60206040518083038186803b15801561076557600080fd5b505af4158015610779573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079d9190610c07565b9050806107df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d6906114c2565b60405180910390fd5b600073__$e8bf4b85905b57662526b2fbe44c6720fc$__630ad68210846000546040518363ffffffff1660e01b815260040161081c929190611446565b60206040518083038186803b15801561083457600080fd5b505af4158015610848573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086c9190610c07565b9050806108ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a59061152e565b60405180910390fd5b8260200151600185602001516108c491906110aa565b14610904576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fb906115e6565b60405180910390fd5b50505050565b82805461091690611635565b90600052602060002090601f016020900481019282610938576000855561097f565b82601f1061095157803560ff191683800117855561097f565b8280016001018555821561097f579182015b8281111561097e578235825591602001919060010190610963565b5b50905061098c9190610990565b5090565b5b808211156109a9576000816000905550600101610991565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000606082840312156109dc576109db6109c1565b5b81905092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610a0a57610a096109e5565b5b8235905067ffffffffffffffff811115610a2757610a266109ea565b5b602083019150836020820283011115610a4357610a426109ef565b5b9250929050565b60008083601f840112610a6057610a5f6109e5565b5b8235905067ffffffffffffffff811115610a7d57610a7c6109ea565b5b602083019150836001820283011115610a9957610a986109ef565b5b9250929050565b60008060008060008060808789031215610abd57610abc6109b7565b5b600087013567ffffffffffffffff811115610adb57610ada6109bc565b5b610ae789828a016109c6565b965050602087013567ffffffffffffffff811115610b0857610b076109bc565b5b610b1489828a016109f4565b9550955050604087013567ffffffffffffffff811115610b3757610b366109bc565b5b610b4389828a016109c6565b935050606087013567ffffffffffffffff811115610b6457610b636109bc565b5b610b7089828a01610a4a565b92509250509295509295509295565b6000819050919050565b610b9281610b7f565b82525050565b6000606082019050610bad6000830186610b89565b610bba6020830185610b89565b610bc76040830184610b89565b949350505050565b60008115159050919050565b610be481610bcf565b8114610bef57600080fd5b50565b600081519050610c0181610bdb565b92915050565b600060208284031215610c1d57610c1c6109b7565b5b6000610c2b84828501610bf2565b91505092915050565b600082825260208201905092915050565b7f5374617465732063616e6e6f742062652073706c697420667572746865720000600082015250565b6000610c7b601e83610c34565b9150610c8682610c45565b602082019050919050565b60006020820190508181036000830152610caa81610c6e565b9050919050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610cff82610cb6565b810181811067ffffffffffffffff82111715610d1e57610d1d610cc7565b5b80604052505050565b6000610d316109ad565b9050610d3d8282610cf6565b919050565b600080fd5b6000819050919050565b610d5a81610d47565b8114610d6557600080fd5b50565b600081359050610d7781610d51565b92915050565b610d8681610b7f565b8114610d9157600080fd5b50565b600081359050610da381610d7d565b92915050565b600067ffffffffffffffff821115610dc457610dc3610cc7565b5b602082029050602081019050919050565b6000610de8610de384610da9565b610d27565b90508083825260208201905060208402830185811115610e0b57610e0a6109ef565b5b835b81811015610e345780610e208882610d68565b845260208401935050602081019050610e0d565b5050509392505050565b600082601f830112610e5357610e526109e5565b5b8135610e63848260208601610dd5565b91505092915050565b600060608284031215610e8257610e81610cb1565b5b610e8c6060610d27565b90506000610e9c84828501610d68565b6000830152506020610eb084828501610d94565b602083015250604082013567ffffffffffffffff811115610ed457610ed3610d42565b5b610ee084828501610e3e565b60408301525092915050565b6000610ef83683610e6c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f3982610b7f565b9150610f4483610b7f565b925082821015610f5757610f56610eff565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f546865206c61737420737461746520737570706c696564206d7573742064696660008201527f6665722066726f6d20746865206469737075746564207769746e657373000000602082015250565b6000610fed603d83610c34565b9150610ff882610f91565b604082019050919050565b6000602082019050818103600083015261101c81610fe0565b9050919050565b60006080820190506110386000830187610b89565b6110456020830186610b89565b6110526040830185610b89565b61105f6060830184610b89565b95945050505050565b60008151905061107781610d7d565b92915050565b600060208284031215611093576110926109b7565b5b60006110a184828501611068565b91505092915050565b60006110b582610b7f565b91506110c083610b7f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110f5576110f4610eff565b5b828201905092915050565b7f496e636f727265637420616d6f756e74206f6620737461746520686173686573600082015250565b6000611136602083610c34565b915061114182611100565b602082019050919050565b6000602082019050818103600083015261116581611129565b9050919050565b600061117782610b7f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156111aa576111a9610eff565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6111ea81610d47565b82525050565b60006111fc83836111e1565b60208301905092915050565b6000602082019050919050565b6000611220826111b5565b61122a81856111c0565b9350611235836111d1565b8060005b8381101561126657815161124d88826111f0565b975061125883611208565b925050600181019050611239565b5085935050505092915050565b6000602082019050818103600083015261128d8184611215565b905092915050565b6000815190506112a481610d51565b92915050565b6000602082840312156112c0576112bf6109b7565b5b60006112ce84828501611295565b91505092915050565b7f436f6e73656e737573207769746e6573732063616e6e6f74206265207468652060008201527f6c6173742073746f726564207374617465000000000000000000000000000000602082015250565b6000611333603183610c34565b915061133e826112d7565b604082019050919050565b6000602082019050818103600083015261136281611326565b9050919050565b61137281610b7f565b82525050565b600082825260208201905092915050565b6000611394826111b5565b61139e8185611378565b93506113a9836111d1565b8060005b838110156113da5781516113c188826111f0565b97506113cc83611208565b9250506001810190506113ad565b5085935050505092915050565b60006060830160008301516113ff60008601826111e1565b5060208301516114126020860182611369565b506040830151848203604086015261142a8282611389565b9150508091505092915050565b61144081610d47565b82525050565b6000604082019050818103600083015261146081856113e7565b905061146f6020830184611437565b9392505050565b7f496e76616c696420636f6e73656e737573207769746e6573732070726f6f6600600082015250565b60006114ac601f83610c34565b91506114b782611476565b602082019050919050565b600060208201905081810360008301526114db8161149f565b9050919050565b7f496e76616c69642064697370757465207769746e6573732070726f6f66000000600082015250565b6000611518601d83610c34565b9150611523826114e2565b602082019050919050565b600060208201905081810360008301526115478161150b565b9050919050565b7f44697370757465642073746174652068617368206d757374206265207468652060008201527f6e657874206c65616620616674657220636f6e73656e7375732073746174652060208201527f6861736800000000000000000000000000000000000000000000000000000000604082015250565b60006115d0604483610c34565b91506115db8261154e565b606082019050919050565b600060208201905081810360008301526115ff816115c3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061164d57607f821691505b6020821081141561166157611660611606565b5b5091905056fea2646970667358221220f6dea24c719d28821385d7c1d75993b3b9ffba7d6369eec07c36d0e537efe58a64736f6c63430008090033";

export class ChallengeManager__factory extends ContractFactory {
  constructor(
    linkLibraryAddresses: ChallengeManagerLibraryAddresses,
    signer?: Signer
  ) {
    super(
      _abi,
      ChallengeManager__factory.linkBytecode(linkLibraryAddresses),
      signer
    );
  }

  static linkBytecode(
    linkLibraryAddresses: ChallengeManagerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e8bf4b85905b57662526b2fbe44c6720fc\\$__", "g"),
      linkLibraryAddresses["contracts/merkle-utils.sol:MerkleUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _values: BytesLike[],
    _numSteps: BigNumberish,
    _lastMover: string,
    _splitFactor: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ChallengeManager> {
    return super.deploy(
      _values,
      _numSteps,
      _lastMover,
      _splitFactor,
      overrides || {}
    ) as Promise<ChallengeManager>;
  }
  getDeployTransaction(
    _values: BytesLike[],
    _numSteps: BigNumberish,
    _lastMover: string,
    _splitFactor: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _values,
      _numSteps,
      _lastMover,
      _splitFactor,
      overrides || {}
    );
  }
  attach(address: string): ChallengeManager {
    return super.attach(address) as ChallengeManager;
  }
  connect(signer: Signer): ChallengeManager__factory {
    return super.connect(signer) as ChallengeManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChallengeManagerInterface {
    return new utils.Interface(_abi) as ChallengeManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChallengeManager {
    return new Contract(address, _abi, signerOrProvider) as ChallengeManager;
  }
}

export interface ChallengeManagerLibraryAddresses {
  ["contracts/merkle-utils.sol:MerkleUtils"]: string;
}
