/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DisputeGameManager,
  DisputeGameManagerInterface,
} from "../DisputeGameManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_hashes",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "_disputedStep",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_caller",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_numOfSplits",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "witness",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "nodes",
            type: "bytes32[]",
          },
        ],
        internalType: "struct WitnessProof",
        name: "consensusProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "witness",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "nodes",
            type: "bytes32[]",
          },
        ],
        internalType: "struct WitnessProof",
        name: "disputedProof",
        type: "tuple",
      },
    ],
    name: "checkWitnesses",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "interval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "witness",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "nodes",
            type: "bytes32[]",
          },
        ],
        internalType: "struct WitnessProof",
        name: "consensusProof",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "hashes",
        type: "bytes32[]",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "witness",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "nodes",
            type: "bytes32[]",
          },
        ],
        internalType: "struct WitnessProof",
        name: "disputedProof",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "_caller",
        type: "string",
      },
    ],
    name: "split",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001f8c38038062001f8c83398181016040528101906200003791906200030d565b73__$3f210b973146c2d340e2bb2aba5bbea8b7$__639898dc10856040518263ffffffff1660e01b815260040162000070919062000484565b60206040518083038186803b1580156200008957600080fd5b505af41580156200009e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c49190620003bd565b600081905550826002819055508160049080519060200190620000e992919062000103565b5080600181905550600060038190555050505050620006e1565b8280546200011190620005b9565b90600052602060002090601f01602090048101928262000135576000855562000181565b82601f106200015057805160ff191683800117855562000181565b8280016001018555821562000181579182015b828111156200018057825182559160200191906001019062000163565b5b50905062000190919062000194565b5090565b5b80821115620001af57600081600090555060010162000195565b5090565b6000620001ca620001c484620004d1565b620004a8565b90508083825260208201905082856020860282011115620001f057620001ef62000688565b5b60005b85811015620002245781620002098882620002ac565b845260208401935060208301925050600181019050620001f3565b5050509392505050565b6000620002456200023f8462000500565b620004a8565b9050828152602081018484840111156200026457620002636200068d565b5b6200027184828562000583565b509392505050565b600082601f83011262000291576200029062000683565b5b8151620002a3848260208601620001b3565b91505092915050565b600081519050620002bd81620006ad565b92915050565b600082601f830112620002db57620002da62000683565b5b8151620002ed8482602086016200022e565b91505092915050565b6000815190506200030781620006c7565b92915050565b600080600080608085870312156200032a576200032962000697565b5b600085015167ffffffffffffffff8111156200034b576200034a62000692565b5b620003598782880162000279565b94505060206200036c87828801620002f6565b935050604085015167ffffffffffffffff81111562000390576200038f62000692565b5b6200039e87828801620002c3565b9250506060620003b187828801620002f6565b91505092959194509250565b600060208284031215620003d657620003d562000697565b5b6000620003e684828501620002ac565b91505092915050565b6000620003fd838362000473565b60208301905092915050565b6000620004168262000546565b6200042281856200055e565b93506200042f8362000536565b8060005b83811015620004665781516200044a8882620003ef565b9750620004578362000551565b92505060018101905062000433565b5085935050505092915050565b6200047e816200056f565b82525050565b60006020820190508181036000830152620004a0818462000409565b905092915050565b6000620004b4620004c7565b9050620004c28282620005ef565b919050565b6000604051905090565b600067ffffffffffffffff821115620004ef57620004ee62000654565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156200051e576200051d62000654565b5b62000529826200069c565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b6000819050919050565b6000819050919050565b60005b83811015620005a357808201518184015260208101905062000586565b83811115620005b3576000848401525b50505050565b60006002820490506001821680620005d257607f821691505b60208210811415620005e957620005e862000625565b5b50919050565b620005fa826200069c565b810181811067ffffffffffffffff821117156200061c576200061b62000654565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b620006b8816200056f565b8114620006c457600080fd5b50565b620006d28162000579565b8114620006de57600080fd5b50565b61189b80620006f16000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631e5520ac1461004657806331d802ea14610062578063947a36fb1461007e575b600080fd5b610060600480360381019061005b9190610b8f565b61009c565b005b61007c60048036038101906100779190610c6e565b610420565b005b610086610673565b60405161009391906111ed565b60405180910390f35b60016100a6610673565b10156100e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100de906110bd565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff166331d802ea87856040518363ffffffff1660e01b815260040161012292919061115d565b60006040518083038186803b15801561013a57600080fd5b505afa15801561014e573d6000803e3d6000fd5b50505050826000013585856001888890506101699190611422565b818110610179576101786115be565b5b9050602002013514156101c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b89061111d565b60405180910390fd5b60006101d0876020013561068b565b905060006003549050600180546101e79190611422565b88602001351461020d5761020a60018960200135610205919061139b565b61068b565b90505b6000600161021e8484600154610727565b6102289190611422565b905080888890501461026f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610266906110dd565b60405180910390fd5b8260038190555081600281905550600060018989905061028f919061139b565b67ffffffffffffffff8111156102a8576102a76115ed565b5b6040519080825280602002602001820160405280156102d65781602001602082028036833780820191505090505b5090508960000135816000815181106102f2576102f16115be565b5b6020026020010181815250506000600190505b60018a8a9050610315919061139b565b81101561037457898960018361032b9190611422565b81811061033b5761033a6115be565b5b90506020020135828281518110610355576103546115be565b5b602002602001018181525050808061036c906114e8565b915050610305565b5073__$3f210b973146c2d340e2bb2aba5bbea8b7$__639898dc10826040518263ffffffff1660e01b81526004016103ac919061105b565b60206040518083038186803b1580156103c457600080fd5b505af41580156103d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fc9190610b62565b600081905550858560049190610413929190610840565b5050505050505050505050565b6001826020015110610467576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045e9061107d565b60405180910390fd5b600073__$3f210b973146c2d340e2bb2aba5bbea8b7$__639eab5ec48460005461048f610771565b6040518463ffffffff1660e01b81526004016104ad93929190611194565b60206040518083038186803b1580156104c557600080fd5b505af41580156104d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fd9190610b35565b90508061053f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105369061113d565b60405180910390fd5b600073__$3f210b973146c2d340e2bb2aba5bbea8b7$__639eab5ec484600054610567610771565b6040518463ffffffff1660e01b815260040161058593929190611194565b60206040518083038186803b15801561059d57600080fd5b505af41580156105b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d59190610b35565b905080610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e906110fd565b60405180910390fd5b82602001516001856020015161062d919061139b565b1461066d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106649061109d565b60405180910390fd5b50505050565b6000610686600354600254600154610806565b905090565b600073__$09015ce1e5157210cc40d694128b2c8362$__638e12fd74836003546002546001546040518563ffffffff1660e01b81526004016106d09493929190611208565b60206040518083038186803b1580156106e857600080fd5b505af41580156106fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107209190610ce6565b9050919050565b60006001610736858585610806565b1061074f57600182610748919061139b565b905061076a565b6001848461075d9190611422565b610767919061139b565b90505b9392505050565b600073__$3f210b973146c2d340e2bb2aba5bbea8b7$";

export class DisputeGameManager__factory extends ContractFactory {
  constructor(
    linkLibraryAddresses: DisputeGameManagerLibraryAddresses,
    signer?: Signer
  ) {
    super(
      _abi,
      DisputeGameManager__factory.linkBytecode(linkLibraryAddresses),
      signer
    );
  }

  static linkBytecode(
    linkLibraryAddresses: DisputeGameManagerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3f210b973146c2d340e2bb2aba5bbea8b7\\$__", "g"),
      linkLibraryAddresses["contracts/merkle.sol:MerkleHelper"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$09015ce1e5157210cc40d694128b2c8362\\$__", "g"),
      linkLibraryAddresses["contracts/index-math.sol:IndexMath"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _hashes: BytesLike[],
    _disputedStep: BigNumberish,
    _caller: string,
    _numOfSplits: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DisputeGameManager> {
    return super.deploy(
      _hashes,
      _disputedStep,
      _caller,
      _numOfSplits,
      overrides || {}
    ) as Promise<DisputeGameManager>;
  }
  getDeployTransaction(
    _hashes: BytesLike[],
    _disputedStep: BigNumberish,
    _caller: string,
    _numOfSplits: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _hashes,
      _disputedStep,
      _caller,
      _numOfSplits,
      overrides || {}
    );
  }
  attach(address: string): DisputeGameManager {
    return super.attach(address) as DisputeGameManager;
  }
  connect(signer: Signer): DisputeGameManager__factory {
    return super.connect(signer) as DisputeGameManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DisputeGameManagerInterface {
    return new utils.Interface(_abi) as DisputeGameManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DisputeGameManager {
    return new Contract(address, _abi, signerOrProvider) as DisputeGameManager;
  }
}

export interface DisputeGameManagerLibraryAddresses {
  ["contracts/merkle.sol:MerkleHelper"]: string;
  ["contracts/index-math.sol:IndexMath"]: string;
}
