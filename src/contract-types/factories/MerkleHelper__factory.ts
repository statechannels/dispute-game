/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MerkleHelper, MerkleHelperInterface } from "../MerkleHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "leaves",
        type: "bytes32[]",
      },
    ],
    name: "generateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "log2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "witness",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "nodes",
            type: "bytes32[]",
          },
        ],
        internalType: "struct WitnessProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "validateWitness",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610cfb610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80630ad68210146100505780635456bf13146100805780639898dc10146100b0575b600080fd5b61006a600480360381019061006591906106fd565b6100e0565b60405161007791906107f6565b60405180910390f35b61009a60048036038101906100959190610759565b61026e565b6040516100a7919061082c565b60405180910390f35b6100ca60048036038101906100c591906106b4565b61038e565b6040516100d79190610811565b60405180910390f35b60008061013b8480604001906100f69190610847565b80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050506104b8565b90506000610149825161026e565b9050600060018261015a9190610ac2565b90505b60008111156102335760005b82600261017691906109a4565b81101561021f57600084828151811061019257610191610bf3565b5b6020026020010151856001846101a891906108fb565b815181106101b9576101b8610bf3565b5b60200260200101516040516020016101d29291906107ca565b604051602081830303815290604052805190602001209050808583815181106101fe576101fd610bf3565b5b6020026020010181815250505060028161021891906108fb565b9050610169565b50808061022b90610b16565b91505061015d565b50838260008151811061024957610248610bf3565b5b60200260200101511461026157600092505050610268565b6001925050505b92915050565b6000806000905070010000000000000000000000000000000083106102a457608083901c92506080816102a191906108fb565b90505b6801000000000000000083106102cb57604083901c92506040816102c891906108fb565b90505b64010000000083106102ee57602083901c92506020816102eb91906108fb565b90505b62010000831061030f57601083901c925060108161030c91906108fb565b90505b610100831061032f57600883901c925060088161032c91906108fb565b90505b6010831061034e57600483901c925060048161034b91906108fb565b90505b6004831061036d57600283901c925060028161036a91906108fb565b90505b600283106103855760018161038291906108fb565b90505b80915050919050565b60008061039a836104b8565b905060006103a8825161026e565b905060006001826103b99190610ac2565b90505b60008111156104925760005b8260026103d591906109a4565b81101561047e5760008482815181106103f1576103f0610bf3565b5b60200260200101518560018461040791906108fb565b8151811061041857610417610bf3565b5b60200260200101516040516020016104319291906107ca565b6040516020818303038152906040528051906020012090508085838151811061045d5761045c610bf3565b5b6020026020010181815250505060028161047791906108fb565b90506103c8565b50808061048a90610b16565b9150506103bc565b50816000815181106104a7576104a6610bf3565b5b602002602001015192505050919050565b606060006104c6835161026e565b60026104d291906109a4565b905060008167ffffffffffffffff8111156104f0576104ef610c22565b5b60405190808252806020026020018201604052801561051e5781602001602082028036833780820191505090505b50905060005b828110156105c257845181116105735784818151811061054757610546610bf3565b5b602002602001015182828151811061056257610561610bf3565b5b6020026020010181815250506105af565b604051602001604051602081830303815290604052805190602001208282815181106105a2576105a1610bf3565b5b6020026020010181815250505b80806105ba90610b71565b915050610524565b819350505050919050565b60006105e06105db846108cf565b6108aa565b9050808382526020820190508285602086028201111561060357610602610c65565b5b60005b858110156106335781610619888261066b565b845260208401935060208301925050600181019050610606565b5050509392505050565b600082601f83011261065257610651610c51565b5b81356106628482602086016105cd565b91505092915050565b60008135905061067a81610c97565b92915050565b60006060828403121561069657610695610c5b565b5b81905092915050565b6000813590506106ae81610cae565b92915050565b6000602082840312156106ca576106c9610c74565b5b600082013567ffffffffffffffff8111156106e8576106e7610c6f565b5b6106f48482850161063d565b91505092915050565b6000806040838503121561071457610713610c74565b5b600083013567ffffffffffffffff81111561073257610731610c6f565b5b61073e85828601610680565b925050602061074f8582860161066b565b9150509250929050565b60006020828403121561076f5761076e610c74565b5b600061077d8482850161069f565b91505092915050565b61078f81610af6565b82525050565b61079e81610b02565b82525050565b6107b56107b082610b02565b610bba565b82525050565b6107c481610b0c565b82525050565b60006107d682856107a4565b6020820191506107e682846107a4565b6020820191508190509392505050565b600060208201905061080b6000830184610786565b92915050565b60006020820190506108266000830184610795565b92915050565b600060208201905061084160008301846107bb565b92915050565b6000808335600160200384360303811261086457610863610c60565b5b80840192508235915067ffffffffffffffff82111561088657610885610c56565b5b6020830192506020820236038313156108a2576108a1610c6a565b5b509250929050565b60006108b46108c5565b90506108c08282610b40565b919050565b6000604051905090565b600067ffffffffffffffff8211156108ea576108e9610c22565b5b602082029050602081019050919050565b600061090682610b0c565b915061091183610b0c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561094657610945610bc4565b5b828201905092915050565b6000808291508390505b600185111561099b5780860481111561097757610976610bc4565b5b60018516156109865780820291505b808102905061099485610c8a565b945061095b565b94509492505050565b60006109af82610b0c565b91506109ba83610b0c565b92506109e77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846109ef565b905092915050565b6000826109ff5760019050610abb565b81610a0d5760009050610abb565b8160018114610a235760028114610a2d57610a5c565b6001915050610abb565b60ff841115610a3f57610a3e610bc4565b5b8360020a915084821115610a5657610a55610bc4565b5b50610abb565b5060208310610133831016604e8410600b8410161715610a915782820a905083811115610a8c57610a8b610bc4565b5b610abb565b610a9e8484846001610951565b92509050818404811115610ab557610ab4610bc4565b5b81810290505b9392505050565b6000610acd82610b0c565b9150610ad883610b0c565b925082821015610aeb57610aea610bc4565b5b828203905092915050565b60008115159050919050565b6000819050919050565b6000819050919050565b6000610b2182610b0c565b91506000821415610b3557610b34610bc4565b5b600182039050919050565b610b4982610c79565b810181811067ffffffffffffffff82111715610b6857610b67610c22565b5b80604052505050565b6000610b7c82610b0c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610baf57610bae610bc4565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b610ca081610b02565b8114610cab57600080fd5b50565b610cb781610b0c565b8114610cc257600080fd5b5056fea2646970667358221220599bb8180d0924c5b2a9f4f35875275476153fb09606ec36d594b4bdafa1352464736f6c63430008070033";

export class MerkleHelper__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MerkleHelper> {
    return super.deploy(overrides || {}) as Promise<MerkleHelper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MerkleHelper {
    return super.attach(address) as MerkleHelper;
  }
  connect(signer: Signer): MerkleHelper__factory {
    return super.connect(signer) as MerkleHelper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleHelperInterface {
    return new utils.Interface(_abi) as MerkleHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MerkleHelper {
    return new Contract(address, _abi, signerOrProvider) as MerkleHelper;
  }
}
