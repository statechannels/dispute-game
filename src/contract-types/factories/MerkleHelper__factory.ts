/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MerkleHelper, MerkleHelperInterface } from "../MerkleHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "leaves",
        type: "bytes32[]",
      },
    ],
    name: "generateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "log2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "witness",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "nodes",
            type: "bytes32[]",
          },
        ],
        internalType: "struct WitnessProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "depth",
        type: "uint256",
      },
    ],
    name: "validateWitness",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6106ea610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80635456bf13146100505780639898dc10146100805780639eab5ec4146100b0575b600080fd5b61006a60048036038101906100659190610412565b6100e0565b60405161007791906104cc565b60405180910390f35b61009a6004803603810190610095919061035a565b610200565b6040516100a79190610496565b60405180910390f35b6100ca60048036038101906100c591906103a3565b61026a565b6040516100d7919061047b565b60405180910390f35b60008060009050700100000000000000000000000000000000831061011657608083901c92506080816101139190610538565b90505b68010000000000000000831061013d57604083901c925060408161013a9190610538565b90505b640100000000831061016057602083901c925060208161015d9190610538565b90505b62010000831061018157601083901c925060108161017e9190610538565b90505b61010083106101a157600883901c925060088161019e9190610538565b90505b601083106101c057600483901c92506004816101bd9190610538565b90505b600483106101df57600283901c92506002816101dc9190610538565b90505b600283106101f7576001816101f49190610538565b90505b80915050919050565b6000808251111561023a57600060405160200161021d91906104b1565b604051602081830303815290604052805190602001209050610265565b600060405160200161024c91906104b1565b6040516020818303038152906040528051906020012090505b919050565b60009392505050565b60006102866102818461050c565b6104e7565b905080838252602082019050828560208602820111156102a9576102a8610666565b5b60005b858110156102d957816102bf8882610311565b8452602084019350602083019250506001810190506102ac565b5050509392505050565b600082601f8301126102f8576102f761065c565b5b8135610308848260208601610273565b91505092915050565b60008135905061032081610686565b92915050565b60006060828403121561033c5761033b610661565b5b81905092915050565b6000813590506103548161069d565b92915050565b6000602082840312156103705761036f610670565b5b600082013567ffffffffffffffff81111561038e5761038d61066b565b5b61039a848285016102e3565b91505092915050565b6000806000606084860312156103bc576103bb610670565b5b600084013567ffffffffffffffff8111156103da576103d961066b565b5b6103e686828701610326565b93505060206103f786828701610311565b925050604061040886828701610345565b9150509250925092565b60006020828403121561042857610427610670565b5b600061043684828501610345565b91505092915050565b6104488161058e565b82525050565b6104578161059a565b82525050565b610466816105bb565b82525050565b610475816105a4565b82525050565b6000602082019050610490600083018461043f565b92915050565b60006020820190506104ab600083018461044e565b92915050565b60006020820190506104c6600083018461045d565b92915050565b60006020820190506104e1600083018461046c565b92915050565b60006104f1610502565b90506104fd82826105cd565b919050565b6000604051905090565b600067ffffffffffffffff8211156105275761052661062d565b5b602082029050602081019050919050565b6000610543826105a4565b915061054e836105a4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610583576105826105fe565b5b828201905092915050565b60008115159050919050565b6000819050919050565b6000819050919050565b600060ff82169050919050565b60006105c6826105ae565b9050919050565b6105d682610675565b810181811067ffffffffffffffff821117156105f5576105f461062d565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61068f8161059a565b811461069a57600080fd5b50565b6106a6816105a4565b81146106b157600080fd5b5056fea264697066735822122030f90db77c461c8b04630dadf7d56f70bbaf765e9d11fcc651127460c4eece3764736f6c63430008070033";

export class MerkleHelper__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MerkleHelper> {
    return super.deploy(overrides || {}) as Promise<MerkleHelper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MerkleHelper {
    return super.attach(address) as MerkleHelper;
  }
  connect(signer: Signer): MerkleHelper__factory {
    return super.connect(signer) as MerkleHelper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleHelperInterface {
    return new utils.Interface(_abi) as MerkleHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MerkleHelper {
    return new Contract(address, _abi, signerOrProvider) as MerkleHelper;
  }
}
