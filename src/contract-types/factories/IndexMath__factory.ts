/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { IndexMath, IndexMathInterface } from "../IndexMath";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "consensusStep",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "disputedStep",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numSplits",
        type: "uint256",
      },
    ],
    name: "stepForIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610488610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80638e12fd741461003a575b600080fd5b610054600480360381019061004f91906101ab565b61006a565b6040516100619190610264565b60405180910390f35b600080851080610084575061008084848461012a565b8510155b156100c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100bb90610244565b60405180910390fd5b60016100d185858561012a565b6100db9190610371565b8514156100ea57829050610122565b60006100f7858585610174565b9050600181101561010757600190505b85816101139190610317565b8561011e9190610290565b9150505b949350505050565b60006001610139858585610174565b106101525760018261014b9190610290565b905061016d565b600184846101609190610371565b61016a9190610290565b90505b9392505050565b60008184846101839190610371565b61018d91906102e6565b90509392505050565b6000813590506101a58161043b565b92915050565b600080600080608085870312156101c5576101c461040d565b5b60006101d387828801610196565b94505060206101e487828801610196565b93505060406101f587828801610196565b925050606061020687828801610196565b91505092959194509250565b600061021f600d8361027f565b915061022a82610412565b602082019050919050565b61023e816103a5565b82525050565b6000602082019050818103600083015261025d81610212565b9050919050565b60006020820190506102796000830184610235565b92915050565b600082825260208201905092915050565b600061029b826103a5565b91506102a6836103a5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156102db576102da6103af565b5b828201905092915050565b60006102f1826103a5565b91506102fc836103a5565b92508261030c5761030b6103de565b5b828204905092915050565b6000610322826103a5565b915061032d836103a5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610366576103656103af565b5b828202905092915050565b600061037c826103a5565b9150610387836103a5565b92508282101561039a576103996103af565b5b828203905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f496e76616c696420696e64657800000000000000000000000000000000000000600082015250565b610444816103a5565b811461044f57600080fd5b5056fea2646970667358221220876b1f66ec74239759ca77fa5086d5fd8e39842245ddd692db9e914dd7cc3c0764736f6c63430008070033";

export class IndexMath__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<IndexMath> {
    return super.deploy(overrides || {}) as Promise<IndexMath>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): IndexMath {
    return super.attach(address) as IndexMath;
  }
  connect(signer: Signer): IndexMath__factory {
    return super.connect(signer) as IndexMath__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IndexMathInterface {
    return new utils.Interface(_abi) as IndexMathInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IndexMath {
    return new Contract(address, _abi, signerOrProvider) as IndexMath;
  }
}
