/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MerkleWrapper, MerkleWrapperInterface } from "../MerkleWrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "leaves",
        type: "bytes32[]",
      },
    ],
    name: "generateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "witness",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "nodes",
            type: "bytes32[]",
          },
        ],
        internalType: "struct WitnessProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "validateWitness",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061084a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634cb0f53f1461003b5780639898dc101461006b575b600080fd5b6100556004803603810190610050919061022c565b61009b565b60405161006291906102a3565b60405180910390f35b61008560048036038101906100809190610417565b61012e565b604051610092919061046f565b60405180910390f35b600073__$3f210b973146c2d340e2bb2aba5bbea8b7$__630ad6821084846040518363ffffffff1660e01b81526004016100d6929190610678565b60206040518083038186803b1580156100ee57600080fd5b505af4158015610102573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012691906106d4565b905092915050565b600073__$3f210b973146c2d340e2bb2aba5bbea8b7$__639898dc10836040518263ffffffff1660e01b815260040161016791906107b0565b60206040518083038186803b15801561017f57600080fd5b505af4158015610193573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b791906107e7565b9050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000606082840312156101ed576101ec6101d2565b5b81905092915050565b6000819050919050565b610209816101f6565b811461021457600080fd5b50565b60008135905061022681610200565b92915050565b60008060408385031215610243576102426101c8565b5b600083013567ffffffffffffffff811115610261576102606101cd565b5b61026d858286016101d7565b925050602061027e85828601610217565b9150509250929050565b60008115159050919050565b61029d81610288565b82525050565b60006020820190506102b86000830184610294565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61030c826102c3565b810181811067ffffffffffffffff8211171561032b5761032a6102d4565b5b80604052505050565b600061033e6101be565b905061034a8282610303565b919050565b600067ffffffffffffffff82111561036a576103696102d4565b5b602082029050602081019050919050565b600080fd5b600061039361038e8461034f565b610334565b905080838252602082019050602084028301858111156103b6576103b561037b565b5b835b818110156103df57806103cb8882610217565b8452602084019350506020810190506103b8565b5050509392505050565b600082601f8301126103fe576103fd6102be565b5b813561040e848260208601610380565b91505092915050565b60006020828403121561042d5761042c6101c8565b5b600082013567ffffffffffffffff81111561044b5761044a6101cd565b5b610457848285016103e9565b91505092915050565b610469816101f6565b82525050565b60006020820190506104846000830184610460565b92915050565b60006104996020840184610217565b905092915050565b6104aa816101f6565b82525050565b6000819050919050565b6104c3816104b0565b81146104ce57600080fd5b50565b6000813590506104e0816104ba565b92915050565b60006104f560208401846104d1565b905092915050565b610506816104b0565b82525050565b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261053857610537610516565b5b83810192508235915060208301925067ffffffffffffffff8211156105605761055f61050c565b5b60208202360384131561057657610575610511565b5b509250929050565b600082825260208201905092915050565b600080fd5b82818337600083830152505050565b60006105af838561057e565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156105e2576105e161058f565b5b6020830292506105f3838584610594565b82840190509392505050565b600060608301610612600084018461048a565b61061f60008601826104a1565b5061062d60208401846104e6565b61063a60208601826104fd565b50610648604084018461051b565b858303604087015261065b8382846105a3565b925050508091505092915050565b610672816101f6565b82525050565b6000604082019050818103600083015261069281856105ff565b90506106a16020830184610669565b9392505050565b6106b181610288565b81146106bc57600080fd5b50565b6000815190506106ce816106a8565b92915050565b6000602082840312156106ea576106e96101c8565b5b60006106f8848285016106bf565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061073983836104a1565b60208301905092915050565b6000602082019050919050565b600061075d82610701565b610767818561070c565b93506107728361071d565b8060005b838110156107a357815161078a888261072d565b975061079583610745565b925050600181019050610776565b5085935050505092915050565b600060208201905081810360008301526107ca8184610752565b905092915050565b6000815190506107e181610200565b92915050565b6000602082840312156107fd576107fc6101c8565b5b600061080b848285016107d2565b9150509291505056fea2646970667358221220b65ead1eb5fb5b05087792e2a0906964aa0779f3fdbfd241612e8e706384cba664736f6c63430008090033";

export class MerkleWrapper__factory extends ContractFactory {
  constructor(
    linkLibraryAddresses: MerkleWrapperLibraryAddresses,
    signer?: Signer
  ) {
    super(
      _abi,
      MerkleWrapper__factory.linkBytecode(linkLibraryAddresses),
      signer
    );
  }

  static linkBytecode(
    linkLibraryAddresses: MerkleWrapperLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3f210b973146c2d340e2bb2aba5bbea8b7\\$__", "g"),
      linkLibraryAddresses["contracts/merkle.sol:MerkleHelper"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MerkleWrapper> {
    return super.deploy(overrides || {}) as Promise<MerkleWrapper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MerkleWrapper {
    return super.attach(address) as MerkleWrapper;
  }
  connect(signer: Signer): MerkleWrapper__factory {
    return super.connect(signer) as MerkleWrapper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleWrapperInterface {
    return new utils.Interface(_abi) as MerkleWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MerkleWrapper {
    return new Contract(address, _abi, signerOrProvider) as MerkleWrapper;
  }
}

export interface MerkleWrapperLibraryAddresses {
  ["contracts/merkle.sol:MerkleHelper"]: string;
}
