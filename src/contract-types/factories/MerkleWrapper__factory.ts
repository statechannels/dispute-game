/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MerkleWrapper, MerkleWrapperInterface } from "../MerkleWrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "leaves",
        type: "bytes32[]",
      },
    ],
    name: "generateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "witness",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "nodes",
            type: "bytes32[]",
          },
        ],
        internalType: "struct WitnessProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "validateWitness",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610851806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634cb0f53f1461003b5780639898dc101461006b575b600080fd5b61005560048036038101906100509190610372565b61009b565b6040516100629190610577565b60405180910390f35b610085600480360381019061008091906102cf565b61012e565b6040516100929190610592565b60405180910390f35b600073__$3f210b973146c2d340e2bb2aba5bbea8b7$__630ad6821084846040518363ffffffff1660e01b81526004016100d69291906105ad565b60206040518083038186803b1580156100ee57600080fd5b505af4158015610102573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101269190610318565b905092915050565b600073__$3f210b973146c2d340e2bb2aba5bbea8b7$__639898dc10836040518263ffffffff1660e01b81526004016101679190610555565b60206040518083038186803b15801561017f57600080fd5b505af4158015610193573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b79190610345565b9050919050565b60006101d16101cc84610602565b6105dd565b905080838252602082019050828560208602820111156101f4576101f36107ac565b5b60005b85811015610224578161020a8882610271565b8452602084019350602083019250506001810190506101f7565b5050509392505050565b600082601f8301126102435761024261079d565b5b81356102538482602086016101be565b91505092915050565b60008151905061026b816107d6565b92915050565b600081359050610280816107ed565b92915050565b600081519050610295816107ed565b92915050565b6000606082840312156102b1576102b06107a2565b5b81905092915050565b6000813590506102c981610804565b92915050565b6000602082840312156102e5576102e46107c0565b5b600082013567ffffffffffffffff811115610303576103026107b1565b5b61030f8482850161022e565b91505092915050565b60006020828403121561032e5761032d6107c0565b5b600061033c8482850161025c565b91505092915050565b60006020828403121561035b5761035a6107c0565b5b600061036984828501610286565b91505092915050565b60008060408385031215610389576103886107c0565b5b600083013567ffffffffffffffff8111156103a7576103a66107b1565b5b6103b38582860161029b565b92505060206103c485828601610271565b9150509250929050565b60006103da83836104cd565b60208301905092915050565b60006103f28385610667565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115610425576104246107b6565b5b602083029250610436838584610729565b82840190509392505050565b600061044d8261063e565b6104578185610656565b93506104628361062e565b8060005b8381101561049357815161047a88826103ce565b975061048583610649565b925050600181019050610466565b5085935050505092915050565b6104a981610709565b82525050565b6104b881610715565b82525050565b6104c781610715565b82525050565b6104d681610715565b82525050565b6000606083016104ef60008401846106db565b6104fc60008601826104cd565b5061050a60208401846106f2565b6105176020860182610546565b506105256040840184610678565b85830360408701526105388382846103e6565b925050508091505092915050565b61054f8161071f565b82525050565b6000602082019050818103600083015261056f8184610442565b905092915050565b600060208201905061058c60008301846104a0565b92915050565b60006020820190506105a760008301846104af565b92915050565b600060408201905081810360008301526105c781856104dc565b90506105d660208301846104be565b9392505050565b60006105e76105f8565b90506105f38282610738565b919050565b6000604051905090565b600067ffffffffffffffff82111561061d5761061c610769565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60008083356001602003843603038112610695576106946107bb565b5b83810192508235915060208301925067ffffffffffffffff8211156106bd576106bc610798565b5b6020820236038413156106d3576106d26107a7565b5b509250929050565b60006106ea6020840184610271565b905092915050565b600061070160208401846102ba565b905092915050565b60008115159050919050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b610741826107c5565b810181811067ffffffffffffffff821117156107605761075f610769565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6107df81610709565b81146107ea57600080fd5b50565b6107f681610715565b811461080157600080fd5b50565b61080d8161071f565b811461081857600080fd5b5056fea26469706673582212200542715b26c06933a32cc4a66c8ea287fdb1969a0623be10c4fca771f222148764736f6c63430008070033";

export class MerkleWrapper__factory extends ContractFactory {
  constructor(
    linkLibraryAddresses: MerkleWrapperLibraryAddresses,
    signer?: Signer
  ) {
    super(
      _abi,
      MerkleWrapper__factory.linkBytecode(linkLibraryAddresses),
      signer
    );
  }

  static linkBytecode(
    linkLibraryAddresses: MerkleWrapperLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3f210b973146c2d340e2bb2aba5bbea8b7\\$__", "g"),
      linkLibraryAddresses["contracts/merkle.sol:MerkleHelper"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MerkleWrapper> {
    return super.deploy(overrides || {}) as Promise<MerkleWrapper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MerkleWrapper {
    return super.attach(address) as MerkleWrapper;
  }
  connect(signer: Signer): MerkleWrapper__factory {
    return super.connect(signer) as MerkleWrapper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleWrapperInterface {
    return new utils.Interface(_abi) as MerkleWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MerkleWrapper {
    return new Contract(address, _abi, signerOrProvider) as MerkleWrapper;
  }
}

export interface MerkleWrapperLibraryAddresses {
  ["contracts/merkle.sol:MerkleHelper"]: string;
}
